/*
 * Created on 2018-01-15 ( Time 11:23:59 )
 * Generated by Telosys Tools Generator ( version 3.0.0 )
 */

// Load Shop Data Access Object
const ShopDao = require('../dao/ShopDao');

// Load Controller Common function
const ControllerCommon = require('./common/controllerCommon');

// Load Shop entity
const Shop = require('../model/Shop');

/**
 * Shop Controller
 */
module.exports = class ShopController {

    constructor() {
        this.shopDao = new ShopDao();
        this.common = new ControllerCommon();
    }

    /**
     * Tries to find an entity using its Id / Primary Key
     * @param req, res
     * @return findById response's code status and body
     */
    findById(req, res) {
 		let code = req.params.code;
        this.shopDao.findById(code)
            .then(this.common.getSuccess(res))
            .catch(this.common.noSuccess(res));
    };

    /**
     * Finds all entities.
     * @param res
     * @return findAll response's code status and body
     */
    findAll(res) {
        this.shopDao.findAll()
            .then(this.common.getSuccess(res))
            .catch(this.common.noSuccess(res));
    };

    /**
     * Updates the given entity in the database
     * @param req, res
     * @return update response's code status and body
     */
    update(req, res) {
        let shop = new Shop();

        shop.code = req.params.code;
        shop.name = req.body.name;
        shop.address1 = req.body.address1;
        shop.address2 = req.body.address2;
        shop.zipCode = req.body.zipCode;
        shop.city = req.body.city;
        shop.countryCode = req.body.countryCode;
        shop.phone = req.body.phone;
        shop.email = req.body.email;
        shop.executive = req.body.executive;

        return this.shopDao.update(shop)
            .then(this.common.updateSuccess(res))
            .catch(this.common.noSuccess(res));
    };

    /**
     * Save the given entity in the database
     * @param req, res
     * @return save response's code status and body
     */
    save(req, res) {
        let shop = new Shop();

        shop.code = req.body.code;
        shop.name = req.body.name;
        shop.address1 = req.body.address1;
        shop.address2 = req.body.address2;
        shop.zipCode = req.body.zipCode;
        shop.city = req.body.city;
        shop.countryCode = req.body.countryCode;
        shop.phone = req.body.phone;
        shop.email = req.body.email;
        shop.executive = req.body.executive;

        return this.shopDao.save(shop)
            .then(this.common.saveSuccess(res))
            .catch(this.common.noSuccess(res));
    };

    /**
     * Creates the given entity in the database
     * @param req, res
     * @returns create response's code status and body
     */
    create(req, res) {
        let shop = new Shop();

		if (req.body.code) {
 			shop.code = req.body.code;		
		}

 		shop.name = req.body.name;
 		shop.address1 = req.body.address1;
 		shop.address2 = req.body.address2;
 		shop.zipCode = req.body.zipCode;
 		shop.city = req.body.city;
 		shop.countryCode = req.body.countryCode;
 		shop.phone = req.body.phone;
 		shop.email = req.body.email;
 		shop.executive = req.body.executive;

		return this.shopDao.create(shop)
                .then(this.common.createSuccess(res))
                .catch(this.common.noSuccess(res));
    };

    /**
     * Deletes an entity using its Id / Primary Key
     * @param req, res
     * @returns delete response's code status and body
     */
    deleteById(req, res) {
 		let code = req.params.code;
        this.shopDao.deleteById(code)
            .then(this.common.deleteSuccess(res))
            .catch(this.common.noSuccess(res));
    };

};